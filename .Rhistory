head(car.emi)
dim(car.emi)
str(car.emi)
xtabs( ~ Energy.efficiency + Heating.Energy.Source,data = car.emi)
chisq.test(table1)
table1 = xtabs( ~ Energy.efficiency + Heating.Energy.Source,data = car.emi)
chisq.test(table1)
table1 = xtabs( ~ Body.Type + Diet,data = car.emi)
chisq.test(table1)
table1 = xtabs( ~ Waste.Bag.Size + Diet,data = car.emi)
chisq.test(table1)
table1 = xtabs( ~ Waste.Bag.Size + Diet,data = car.emi)
table1
chisq.test(table1)
for (Social.Activity_level in Social.Activity){
print(department_i)
t_i = xtabs(~ Waste.Bag.Size + Diet,data = car.emi , Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
}
Social.Activity
car.emi$Social.Activity
table(car.emi$Social.Activity)
Social.Activity = c('never',     'often', 'sometimes')
for (Social.Activity_level in Social.Activity){
print(department_i)
t_i = xtabs(~ Waste.Bag.Size + Diet,data = car.emi , Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
}
Social.Activity = c('never',     'often', 'sometimes')
for (Social.Activity_level in Social.Activity){
print(Social.Activity_level)
t_i = xtabs(~ Waste.Bag.Size + Diet,data = car.emi , Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
}
Social.Activity = c('never',     'often', 'sometimes')
for (Social.Activity_level in Social.Activity){
print(Social.Activity_level)
t_i = xtabs(~ Waste.Bag.Size + Diet,data = car.emi , Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
}
Social.Activity = c('never',     'often', 'sometimes')
for (Social.Activity_level in Social.Activity){
print(Social.Activity_level)
t_i = xtabs(~ Waste.Bag.Size + Diet, Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
}
Social.Activity = c('never',     'often', 'sometimes')
for (Social.Activity_level in Social.Activity){
print(Social.Activity_level)
t_i = xtabs(~ Waste.Bag.Size + Diet, Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
print('-----------------------)
}
Social.Activity = c('never',     'often', 'sometimes')
for (Social.Activity_level in Social.Activity){
print(Social.Activity_level)
t_i = xtabs(~ Waste.Bag.Size + Diet, Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
print('-----------------------')
}
xtabs(~ Waste.Bag.Size + Diet + Social.Activity, data=car.emi)
IQR(car.emi$CarbonEmission)
summary(car.emi$CarbonEmission)
CarbonEmission.Level = ifelse(car.emi$CarbonEmission > mean(car.emi$CarbonEmission),'High','Low')
table(car.emi$CarbonEmission)
car.emi$CarbonEmission.Level = ifelse(car.emi$CarbonEmission > mean(car.emi$CarbonEmission),'High','Low')
table(car.emi$CarbonEmission.Level)
table1 = xtabs( ~ CarbonEmission.Level + Diet,data = car.emi)
table1
chisq.test(table1)
xtabs(~ CarbonEmission.Level + Diet + Social.Activity, data=car.emi)
Social.Activity = c('never',     'often', 'sometimes')
for (Social.Activity_level in Social.Activity){
print(Social.Activity_level)
t_i = xtabs(~ CarbonEmission.Level  + Diet, Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
print('-----------------------')
}
range(car.emi$Vehicle.Monthly.Distance.Km)
str(car.emi)
cloth.model = glm(How.Many.New.Clothes.Monthly ~ How.Often.Shower + Sex,data = car.emi,family = poisson(link = 'log'))
summary(cloth.model)
cloth.model$residuals
cloth.model$df.residualresiduals
cloth.model$df.residual
anova(cloth.model)
D = deviance(cloth.model)
D
df = cloth.model$df.residual
df
pchisq(D,df,lower.tail = FALSE)
str(car.emi)
cloth.model = glm(How.Many.New.Clothes.Monthly ~ How.Often.Shower + ,data = car.emi,family = poisson(link = 'log'))
cloth.model = glm(How.Many.New.Clothes.Monthly ~ How.Often.Shower ,data = car.emi,family = poisson(link = 'log'))
summary(cloth.model)
D = deviance(cloth.model)
D
df = cloth.model$df.residual
df
pchisq(D,df,lower.tail = FALSE)
cloth.model = glm(How.Many.New.Clothes.Monthly ~ Social.Activity ,data = car.emi,family = poisson(link = 'log'))
summary(cloth.model)
D = deviance(cloth.model)
D
df = cloth.model$df.residual
df
pchisq(D,df,lower.tail = FALSE)
str(car.emi)
cloth.model = glm(How.Many.New.Clothes.Monthly ~ Monthly.Grocery.Bill ,data = car.emi,family = poisson(link = 'log'))
summary(cloth.model)
D = deviance(cloth.model)
D
df = cloth.model$df.residual
df
pchisq(D,df,lower.tail = FALSE)
(5.467e-05)
(5.467e-05)*1
exp(5.467e-05)-1
exp(5.467e-05)
exp(5.467e-05) -1
cloth.model = glm(How.Many.New.Clothes.Monthly ~ Monthly.Grocery.Bill/100 ,data = car.emi,family = poisson(link = 'log'))
log(pi) will increase 5.467e-05
range(car.emi$How.Many.New.Clothes.Monthly)
plot(car.emi$How.Many.New.Clothes.Monthly, log(car.emi$Monthly.Grocery.Bill))
D = deviance(cloth.model)
D
df = cloth.model$df.residual
df
pchisq(D,df,lower.tail = FALSE)
lm(car.emi$How.Many.New.Clothes.Monthly ~ log(car.emi$Monthly.Grocery.Bill))
model2 = lm(car.emi$How.Many.New.Clothes.Monthly ~ log(car.emi$Monthly.Grocery.Bill))4
model2 = lm(car.emi$How.Many.New.Clothes.Monthly ~ log(car.emi$Monthly.Grocery.Bill))
summary(model2)
cloth.model = glm(How.Many.New.Clothes.Monthly ~ Monthly.Grocery.Bill ,data = car.emi,family = poisson(link = 'log'))
summary(cloth.model)
str(car.emi)
table(car.emi$Recycling)
lm(log(car.emi$How.Many.New.Clothes.Monthly) ~ car.emi$Monthly.Grocery.Bill)
plot(log(car.emi$How.Many.New.Clothes.Monthly) ,car.emi$Monthly.Grocery.Bill)
plot(car.emi$Monthly.Grocery.Bill,log(car.emi$How.Many.New.Clothes.Monthly) )
range(car.emi$How.Long.Internet.Daily.Hour)
prop.table(table(car.emi$How.Long.Internet.Daily.Hour))
cloth.model = glm(How.Long.Internet.Daily.Hour ~ Monthly.Grocery.Bill ,data = car.emi,family = poisson(link = 'log'))
summary(cloth.model)
D = deviance(cloth.model)
D
df = cloth.model$df.residual
df
pchisq(D,df,lower.tail = FALSE)
plot(car.emi$Monthly.Grocery.Bill,log(car.emi$How.Long.Internet.Daily.Hour) )
model2 = lm(car.emi$Monthly.Grocery.Bill,log(car.emi$How.Long.Internet.Daily.Hour) )
model2 = lm(car.emi$Monthly.Grocery.Bill ~ log(car.emi$How.Long.Internet.Daily.Hour) )
model2 = lm(log(car.emi$How.Long.Internet.Daily.Hour),car.emi$Monthly.Grocery.Bill  )
model2 = lm(log(car.emi$How.Long.Internet.Daily.Hour) ~ car.emi$Monthly.Grocery.Bill  )
cloth.model = glm(How.Many.New.Clothes.Monthly ~ Waste.Bag.Weekly.Count ,data = car.emi,family = poisson(link = 'log'))
summary(cloth.model)
str(car.emi)
cloth.model = glm(How.Many.New.Clothes.Monthly ~ Monthly.Grocery.Bill ,data = car.emi,family = poisson(link = 'log'))
summary(cloth.model)
D = deviance(cloth.model)
D
df = cloth.model$df.residual
df
pchisq(D,df,lower.tail = FALSE)
social.energy.table = xtabs(~Social.Activity+Energy.efficiency,data = car.emi)
social.energy.table
A=CMHtest(social.energy.table, rscores = c(0,1,2),cscores=c(0,1,2), types="cor")
library(vcdExtra)
A=CMHtest(social.energy.table, rscores = c(0,1,2),cscores=c(0,1,2), types="cor")
A
#Sample correlation R
n=sum(Malform.table)
#Sample correlation R
n=sum(social.energy.table)
n
M=sqrt(A$table[1])
M
R=M/sqrt(n)
R
#P-value for one-sided standard normal with M statistic
P_value=pnorm(M, lower.tail = FALSE)
P_value
?riskscoreci
??riskscoreci
exp(c(18.44,16.13))
exp(c(0.87,-1.44))
exp(c(18.44,16.13))
alg = read.csv('DANA_4820/activity/Algerian.csv')
head(alg)
alg$isfire = ifelse(alg$Classes=='fire',1,0)
alg.fire.model = glm(isfire~RH,family = binomial,data = alg)
summary(alg.fire.model)
summary(alg.fire.model)
temp.fire.model = glm(isfire~Temp,data = alg,family = binomial)
summary(temp.fire.model)
exp(c(18.44,16.13))
RH.temp.fire.model = glm(isfire~Temp + RH,data = alg,family = binomial)
summary(RH.temp.fire.model)
?Anova()
RH.Hot.fire.model2 = glm(isfire~RH + TempHot,family = binomial,data = alg)
alg$TempHot = ifelse(alg$Temp=='hot',1,0)
RH.Hot.fire.model = glm(isfire~RH*TempHot,family = binomial,data = alg)
summary(RH.Hot.fire.model)
RH.Hot.fire.model2 = glm(isfire~RH + TempHot,family = binomial,data = alg)
summary(RH.Hot.fire.model2)
anova(RH.Hot.fire.model2,RH.Hot.fire.model,test = 'LRT')
phat = 0.54
predicted1 <- as.numeric(fitted(RH.Hot.fire.model2) > phat)
x1 = xtabs(~alg$isfire + predicted1)
addmargins(x1)
predicted2 <- as.numeric(fitted(RH.Hot.fire.model) > phat)
x2 = xtabs(~alg$isfire + predicted2)
addmargins(x2)
(26+48) / 99
library(pROC)
rocplot <- roc(isfire ~ fitted(RH.Hot.fire.model), data=alg)
rocplot2 <- roc(isfire ~ fitted(RH.Hot.fire.model2), data=alg)
plot.roc(rocplot, legacy.axes=TRUE) # Specficity on x axis if legacy.axes=F
plot.roc(rocplot2, legacy.axes=TRUE,add=TRUE,col = 'red')
auc(rocplot) # auc = area under ROC curve = concordance index
auc(rocplot2)
library(pROC)
rocplot <- roc(isfire ~ fitted(RH.Hot.fire.model), data=alg)
rocplot2 <- roc(isfire ~ fitted(RH.Hot.fire.model2), data=alg)
plot.roc(rocplot, legacy.axes=TRUE) # Specficity on x axis if legacy.axes=F
plot.roc(rocplot2, legacy.axes=TRUE,add=TRUE,col = 'red')
auc(rocplot) # auc = area under ROC curve = concordance index
auc(rocplot2)
library(pROC)
rocplot <- roc(isfire ~ fitted(RH.Hot.fire.model), data=alg)
rocplot2 <- roc(isfire ~ fitted(RH.Hot.fire.model2), data=alg)
plot.roc(rocplot, legacy.axes=TRUE) # Specficity on x axis if legacy.axes=F
library(pROC)
rocplot <- roc(isfire ~ fitted(RH.Hot.fire.model), data=alg)
rocplot2 <- roc(isfire ~ fitted(RH.Hot.fire.model2), data=alg)
plot.roc(rocplot, legacy.axes=TRUE) # Specficity on x axis if legacy.axes=F
plot.roc(rocplot2, legacy.axes=TRUE,add=TRUE,col = 'red')
auc(rocplot) # auc = area under ROC curve = concordance index
auc(rocplot2)
setwd("C:/Users/wudan/OneDrive - Langara College/DANA_4820_Jonathan/project")
car.emi = read.csv('Carbon Emission.csv')
dim(car.emi)
car.emi$CarbonEmission.Level = ifelse(car.emi$CarbonEmission > mean(car.emi$CarbonEmission),'High','Low')
table(car.emi$CarbonEmission.Level)
str(car.emi)
car.emi = read.csv('Carbon Emission.csv')
car.emi = read.csv('..\data\Carbon Emission.csv')
car.emi = read.csv('../data/Carbon Emission.csv')
car.emi = read.csv('../data/Carbon Emission.csv')
dim(car.emi)
str(car.emi)
car.emi$CarbonEmission.Level = ifelse(car.emi$CarbonEmission > mean(car.emi$CarbonEmission),'High','Low')
table(car.emi$CarbonEmission.Level)
car.emi$CarbonEmission.Level = ifelse(car.emi$CarbonEmission > mean(car.emi$CarbonEmission),'High','Low')
table(car.emi$CarbonEmission.Level)
table1 = xtabs( ~ CarbonEmission.Level + Diet,data = car.emi)
table1
chisq.test(table1)
xtabs(~ CarbonEmission.Level + Diet + Social.Activity, data=car.emi)
Social.Activity = c('never',     'often', 'sometimes')
for (Social.Activity_level in Social.Activity){
print(Social.Activity_level)
t_i = xtabs(~ CarbonEmission.Level  + Diet, Social.Activity==Social.Activity_level, data=car.emi)
t_i_oddsratio = epitools::oddsratio(t_i, method = "wald", conf = 0.95, correct = FALSE)
print(t_i_oddsratio)
print('-----------------------')
}
boxplot(car.emi$CarbonEmission ~ car.emi$Diet)
boxplot(subset(car.emi,car.emi$Diet==c('ominivore','vegan'))$CarbonEmission ~ subset(car.emi,car.emi$Diet==c('ominivore','vegan'))$Diet)
boxplot(subset(car.emi,Diet==c('ominivore','vegan'))$CarbonEmission ~ subset(car.emi,Diet==c('ominivore','vegan'))$Diet)
str(car.emi)
car.emi = read.csv('../data/Carbon Emission.csv')
car.emi = read.csv('../data/Carbon Emission.csv')
car.emi = read.csv('../data/Carbon Emission.csv')
dim(car.emi)
str(car.emi)
car.emi$CarbonEmission.Level = ifelse(car.emi$CarbonEmission > mean(car.emi$CarbonEmission),'High','Low')
table(car.emi$CarbonEmission.Level)
car.emi$CarbonEmission.Level = ifelse(car.emi$CarbonEmission > mean(car.emi$CarbonEmission),'High','Low')
table(car.emi$CarbonEmission.Level)
boxplot(subset(car.emi,Diet==c('ominivore','vegan'))$CarbonEmission ~ subset(car.emi,Diet==c('ominivore','vegan'))$Diet)
boxplot(CarbonEmission ~ Diet, data = subset(car.emi, Diet %in% c('omnivore', 'vegan')))
mean_comparison <- aggregate(CarbonEmission ~ Diet, data = subset(car.emi, Diet %in% c('omnivore', 'vegan')), FUN = mean)
print(mean_comparison)
plot(mean_comparison)
barplot(mean_comparison)
mean_comparison
barplot(mean_comparison$Diet,mean_comparison$CarbonEmission)
mean_comparison$CarbonEmission
?barplot
mean_comparison <- aggregate(CarbonEmission ~ Diet, data = subset(car.emi, Diet %in% c('omnivore', 'vegan')), FUN = mean)
# Base R barplot
barplot(mean_comparison$CarbonEmission,
names.arg = mean_comparison$Diet,
main = "Mean Carbon Emission by Diet",
xlab = "Diet",
ylab = "Mean Carbon Emission",
col = "skyblue")
# Base R barplot
barplot(mean_comparison$CarbonEmission,
names.arg = mean_comparison$Diet,
main = "Mean Carbon Emission by Diet",
xlab = "Diet",
ylab = "Mean Carbon Emission",
ylim = 3000,
col = "skyblue")
# Base R barplot
barplot(mean_comparison$CarbonEmission,
names.arg = mean_comparison$Diet,
main = "Mean Carbon Emission by Diet",
xlab = "Diet",
ylab = "Mean Carbon Emission",
ylim = c(0,3000),
col = "skyblue")
# Base R barplot
barplot(mean_comparison$CarbonEmission,
names.arg = mean_comparison$Diet,
main = "Mean Carbon Emission by Diet",
xlab = "Diet",
ylab = "Mean Carbon Emission",
ylim = c(0,3000),
width = 0.3,
col = "skyblue")
mean_comparison <- aggregate(CarbonEmission ~ Diet, data = subset(car.emi, Diet %in% c('omnivore', 'vegan')), FUN = mean)
# Base R barplot
barplot(mean_comparison$CarbonEmission,
names.arg = mean_comparison$Diet,
main = "Mean Carbon Emission by Diet",
xlab = "Diet",
ylab = "Mean Carbon Emission",
ylim = c(0,3000),
width = c(0.3),
col = "skyblue")
# Base R barplot
barplot(mean_comparison$CarbonEmission,
names.arg = mean_comparison$Diet,
main = "Average Carbon Emission by Diet",
xlab = "Diet",
ylab = "Average Carbon Emission",
ylim = c(0,3000),
width = c(0.3),
col = "skyblue")
mean_comparison
mean_comparison[1,2]
mean_comparison[1,2]/mean_comparison[2,2]
mean_comparison
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Transport)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15)
) +
guides(fill = FALSE)
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Transport)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15)) +
guides(fill = FALSE)
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Transport)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15)) +
guides(fill = FALSE)
library(ggplot2)
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Transport)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15)) +
guides(fill = FALSE)
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Transport)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15))
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15))
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none")  + # Remove legend
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none")  + # Remove legend
ylim(c(0, 3000))  # Set y-axis limits
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 30, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none")  + # Remove legend
ylim(c(0, 2200))  # Set y-axis limits
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 26, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none")  + # Remove legend
ylim(c(0, 2200))  # Set y-axis limits
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 26, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none")  + # Remove legend
ylim(c(0, 1800))  # Set y-axis limits
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet") +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 26, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none",  # Remove legend
axis.title.x = element_blank())  )  + # Remove x-axis label
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet", x = NULL , y= NULL) +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 26, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none",  # Remove legend
)  +
ylim(c(0, 1800))  # Set y-axis limits
mean_comparison
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Diet", x = NULL , y= NULL) +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 26, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none",  # Remove legend
)
#ylim(c(0, 1800))  # Set y-axis limits
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Dietary Preference", x = NULL , y= NULL) +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 26, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none",  # Remove legend
)
#ylim(c(0, 1800))  # Set y-axis limits
ggplot(subset(car.emi, Diet %in% c('omnivore', 'vegan')),
aes(Diet, CarbonEmission, fill = Diet)) +  # 'fill' aesthetic for color grouping
geom_bar(position = 'dodge', stat = 'summary', fun = 'mean', colour="seagreen") +
labs(title = "Average Carbon Emission by Dietary Preference", x = NULL , y= NULL) +  # Title
scale_fill_manual(values = c( "aquamarine2", "aquamarine3")) +
theme(
plot.title = element_text(size = 20, face = "bold"),  # Change title font size
axis.text = element_text(size = 15),
legend.position = "none",  # Remove legend
)
#ylim(c(0, 1800))  # Set y-axis limits
